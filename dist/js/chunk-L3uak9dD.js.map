{"version":3,"file":"chunk-L3uak9dD.js","sources":["../../node_modules/react/jsx-runtime.js","../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (document.head.contains(style)) {\n                document.head.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["jsxRuntimeModule","exports","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","LayoutGroupContext","createContext","useConstant","init","useRef","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","v","MotionGlobalConfig","isNumericalString","test","isObject","value","isZeroValueString","memo","callback","result","noop","any","combineFunctions","pipe","transformers","reduce","progress","from","to","toFromDifference","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","numSubscriptions","length","i","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","has","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","forEach","frameloop","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","number","parse","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","_a","_b","getAnimatableNone","parsed","transformer","map","hueToRgb","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","sync","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","MotionValue","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","getValueAsType","microtask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","offsetParent","parentWidth","offsetWidth","size","sizeRef","offsetHeight","offsetTop","offsetLeft","componentDidUpdate","children","PopChild","anchorX","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","removeChild","React.cloneElement","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","register","_","React.useEffect","Provider","usePresence","subscribe","safeToRemove","useCallback","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","Fragment","isEveryExitComplete","isExitComplete","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","scaleCorrectors","isForcedMotionValue","translateAlias","numTransforms","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","styleProp","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","getValueState","resolveVariantFromProps","resolveMotionValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","newValues","liveStyle","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","toUpperCase","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","_c","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257]}